<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>David Schryer</title><link href="http://schryer.github.io/schryer_pelican_blog/" rel="alternate"></link><link href="http://schryer.github.io/schryer_pelican_blog/feeds/notebooks.atom.xml" rel="self"></link><id>http://schryer.github.io/schryer_pelican_blog/</id><updated>2014-08-18T16:00:00+03:00</updated><entry><title>First notebook converted using Pelican</title><link href="http://schryer.github.io/schryer_pelican_blog/notebook_1.html" rel="alternate"></link><updated>2014-08-18T16:00:00+03:00</updated><author><name>David Schryer</name></author><id>tag:schryer.github.io,2014-08-18:schryer_pelican_blog/notebook_1.html</id><summary type="html">&lt;p&gt;such.&lt;/p&gt;
&lt;h1&gt;Converting notebooks using Pelican&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://ipython.org/notebook.html" title="IPython notebook"&gt;IPython notebook&lt;/a&gt; files are a useful way of presenting information.
This entry was created in IPython notebook and then converted
into a &lt;a href="https://pages.github.com/" title="GitHub pages"&gt;GitHub pages&lt;/a&gt; page using Pelican.&lt;/p&gt;
&lt;h2&gt;Converting links using definitions within &lt;a href="https://github.com/schryer/schryer_pelican_blog/blob/master/external_links.md" title="external_links.md"&gt;external_links.md&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To make it easier to both enter and use external URLs, I extended
&lt;a href="https://github.com/schryer/schryer_pelican_blog/blob/master/add_links.py" title="add_links.py"&gt;add_links.py&lt;/a&gt;
to substitute in links found in &lt;a href="https://github.com/schryer/schryer_pelican_blog/blob/master/external_links.md" title="external_links.md"&gt;external_links.md&lt;/a&gt;.
All link keys in square brackets within this notebook that are also
found in &lt;a href="https://github.com/schryer/schryer_pelican_blog/blob/master/external_links.md" title="external_links.md"&gt;external_links.md&lt;/a&gt; are changed into appropriate markdown
link text.&lt;/p&gt;
&lt;h2&gt;Running &lt;a href="http://www.python.org" title="Python"&gt;Python&lt;/a&gt; code:&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;matplotlib&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pyplot&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;
&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Plotting with &lt;a href="http://matplotlib.org/" title="matplotlib"&gt;matplotlib&lt;/a&gt;:&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;%matplotlib inline&lt;/span&gt;


&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;A simple chirp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="images/notebook_1_GENERATED_by_add_links_8_0.png" /&gt;&lt;/p&gt;
&lt;h2&gt;Mathematics&lt;/h2&gt;
&lt;p&gt;Let us start with Bayes' theorem:&lt;/p&gt;
&lt;p&gt;$$
P(\mu~|~D) = \frac{P(D~|~\mu)P(\mu)}{P(D)}
$$&lt;/p&gt;
&lt;p&gt;We'll use a flat prior on $\mu$ (i.e. $P(\mu) \propto 1$ over the region of
interest) and use the likelihood&lt;/p&gt;
&lt;p&gt;$$
P(D~|~\mu) = \prod_{i=1}^N \frac{1}{\sqrt{2\pi\sigma_x^2}}\exp\left[\frac{(\mu -
x_i)^2}{2\sigma_x^2}\right]
$$&lt;/p&gt;
&lt;p&gt;Computing this product and manipulating the terms, it's straightforward to show
that this gives&lt;/p&gt;
&lt;p&gt;$$
P(\mu~|~D) \propto \exp\left[\frac{-(\mu - \bar{x})^2}{2\sigma_\mu^2}\right]
$$&lt;/p&gt;
&lt;p&gt;which is recognizable as a normal distribution with mean $\bar{x}$ and standard
deviation $\sigma_\mu$.&lt;/p&gt;
&lt;p&gt;That is, &lt;strong&gt;the Bayesian posterior on $\mu$ in this case is exactly equal to the
frequentist sampling distribution for $\mu$&lt;/strong&gt;.&lt;/p&gt;&lt;script type= "text/javascript"&gt;
    if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
        var mathjaxscript = document.createElement('script');
        mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
        mathjaxscript.type = 'text/javascript';
        mathjaxscript.src = 'https:' == document.location.protocol
                ? 'https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'
                : 'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
        mathjaxscript[(window.opera ? "innerHTML" : "text")] =
            "MathJax.Hub.Config({" +
            "    config: ['MMLorHTML.js']," +
            "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
            "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
            "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
            "    displayAlign: 'center'," +
            "    displayIndent: '0em'," +
            "    showMathMenu: true," +
            "    tex2jax: { " +
            "        inlineMath: [ ['$','$'] ], " +
            "        displayMath: [ ['$$','$$'] ]," +
            "        processEscapes: true," +
            "        preview: 'TeX'," +
            "    }, " +
            "    'HTML-CSS': { " +
            "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }" +
            "    } " +
            "}); ";
        (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
    }
&lt;/script&gt;
</summary><category term="Python"></category></entry></feed>