<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>David Schryer</title><link href="http://schryer.github.io/python_course_material/" rel="alternate"></link><link href="http://schryer.github.io/python_course_material/feeds/blog.atom.xml" rel="self"></link><id>http://schryer.github.io/python_course_material/</id><updated>2014-05-22T22:00:00+03:00</updated><entry><title>First steps with Pelican</title><link href="http://schryer.github.io/python_course_material/1.html" rel="alternate"></link><updated>2014-05-22T22:00:00+03:00</updated><author><name>David Schryer</name></author><id>tag:schryer.github.io,2014-05-22:python_course_material/1.html</id><summary type="html">&lt;p&gt;These are thoughts about my first steps with &lt;a href="http://blog.getpelican.com/" title="Pelican"&gt;Pelican&lt;/a&gt; and hosting a
blog on &lt;a href="https://pages.github.com/" title="GitHub pages"&gt;GitHub pages&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;Installing &lt;a href="http://blog.getpelican.com/" title="Pelican"&gt;Pelican&lt;/a&gt; itself was pretty straightforward. More time was
spent choosing a theme that worked without any kind of tinkering.&lt;/p&gt;
&lt;h2&gt;Use of two repositories&lt;/h2&gt;
&lt;p&gt;To avoid the need for &lt;a href="https://pages.github.com/" title="GitHub pages"&gt;GitHub Pages&lt;/a&gt; to regenerate the static pages
after reload, I split this project into two nested repositories with
the &lt;a href="https://github.com/schryer/schryer_pelican_blog" title="parent"&gt;parent&lt;/a&gt; housing the &lt;a href="http://schryer.github.io/" title="generated content"&gt;generated content&lt;/a&gt; in its &lt;code&gt;output&lt;/code&gt;
directory. To avoid deleting the contents of the &lt;code&gt;.git&lt;/code&gt; directory in
the &lt;a href="http://schryer.github.io/" title="generated content"&gt;generated content&lt;/a&gt; repository, the &lt;code&gt;output&lt;/code&gt; directory was put in
the &lt;code&gt;.gitignore&lt;/code&gt; file in the parent repository and the &lt;code&gt;clean&lt;/code&gt; option
was changed in the Pelican &lt;code&gt;Makefile&lt;/code&gt; (see below).&lt;/p&gt;
&lt;h2&gt;Conversion of my resume&lt;/h2&gt;
&lt;p&gt;As a test, I converted my &lt;a href="pages/resume"&gt;resume&lt;/a&gt; from &lt;a href="http://en.wikipedia.org/wiki/ReStructuredText" title="reStructuredText"&gt;reST&lt;/a&gt; to
&lt;a href="https://help.github.com/articles/github-flavored-markdown" title="Markdown"&gt;Markdown&lt;/a&gt; using &lt;a href="http://johnmacfarlane.net/pandoc/" title="pandoc"&gt;pandoc&lt;/a&gt;, however, some changes were required to
render subscripts and superscripts using the &lt;a href="https://github.com/barrysteyn/pelican_plugin-render_math" title="render_math Pelican plugin."&gt;render_math&lt;/a&gt; plugin for
&lt;a href="http://blog.getpelican.com/" title="Pelican"&gt;Pelican&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Adding a common external links file&lt;/h2&gt;
&lt;p&gt;Because &lt;a href="https://help.github.com/articles/github-flavored-markdown" title="Markdown"&gt;Markdown&lt;/a&gt; does not have a built in mechanism for including
content from other files, I decided to build a simple &lt;a href="http://www.python.org" title="Python"&gt;Python&lt;/a&gt; script
that reads all files contained in &lt;code&gt;stubs/&lt;/code&gt; and &lt;code&gt;stubs/pages/&lt;/code&gt;, and
generates new files in &lt;code&gt;contents/&lt;/code&gt; and &lt;code&gt;contents/pages/&lt;/code&gt; with all
links contained in &lt;code&gt;external_links.md&lt;/code&gt; appended to the end of each.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Makefile&lt;/code&gt; was altered to include a single &lt;a href="http://www.python.org" title="Python"&gt;Python&lt;/a&gt; command before
each type of build:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;add_links&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;clean&lt;/code&gt; function within the &lt;code&gt;Makefile&lt;/code&gt; was changed to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;add_links&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;clean&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which removes all generated files. The generated files replace &lt;code&gt;.md&lt;/code&gt;
with &lt;code&gt;_GENERATED_by_add_links.md&lt;/code&gt; to ensure other &lt;code&gt;.md&lt;/code&gt; files created
by users in &lt;code&gt;content/&lt;/code&gt; are not removed. &lt;/p&gt;
&lt;h2&gt;Next steps&lt;/h2&gt;
&lt;p&gt;In future posts I will try to include &lt;a href="http://ipython.org/notebook.html" title="IPython notebook"&gt;IPython notebook&lt;/a&gt; files inline.&lt;/p&gt;</summary><category term="pelican"></category><category term="python"></category></entry></feed>